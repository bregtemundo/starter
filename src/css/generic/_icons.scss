@font-face {
  font-family: "icons";
  src: url('../../dist/img/icons/icons.eot');
  src: url('../../dist/img/icons/icons.eot?#iefix') format('eot'),
    url('../../dist/img/icons/icons.woff2') format('woff2'),
    url('../../dist/img/icons/icons.woff') format('woff'),
    url('../../dist/img/icons/icons.ttf') format('truetype'),
    url('../../dist/img/icons/icons.svg#icons') format('svg');
}

@mixin icon-styles {
  font-family: "icons";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  font-style: normal;
  font-variant: normal;
  font-weight: normal;
  // speak: none; // only necessary if not using the private unicode range (firstGlyph option)
  text-decoration: none;
  text-transform: none;
}

%icon {
  @include icon-styles;
}

@function icon-char($filename) {
  $char: "";

  @if $filename == close {
    $char: unicode("E001");
  }
  @if $filename == down-arrow {
    $char: unicode("E002");
  }
  @if $filename == facebook {
    $char: unicode("E003");
  }
  @if $filename == hamburger {
    $char: unicode("E004");
  }
  @if $filename == instagram {
    $char: unicode("E005");
  }
  @if $filename == linkedin {
    $char: unicode("E006");
  }
  @if $filename == right-arrow {
    $char: unicode("E007");
  }
  @if $filename == twitter {
    $char: unicode("E008");
  }

  @return $char;
}

@mixin icon($filename, $insert: before, $extend: true) {
  &:#{$insert} {
    @if $extend {
      @extend %icon;
    } @else {
      @include icon-styles;
    }
    content: icon-char($filename);
  }
}

.icon-close {
  @include icon(close);
}
.icon-down-arrow {
  @include icon(down-arrow);
}
.icon-facebook {
  @include icon(facebook);
}
.icon-hamburger {
  @include icon(hamburger);
}
.icon-instagram {
  @include icon(instagram);
}
.icon-linkedin {
  @include icon(linkedin);
}
.icon-right-arrow {
  @include icon(right-arrow);
}
.icon-twitter {
  @include icon(twitter);
}



@function unicode($str) {
  @return unquote("\"")+unquote(str-insert($str, "\\", 1))+unquote("\"");
}